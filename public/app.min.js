function onSubmitShellForm(){$(document).on("submit","#shellForm",function(e){e.preventDefault()
var o=$('[name="exec"]').val()
inputsHistory.push(o),indexInputHistorySelected=inputsHistory.length,$.post("/",{exec:o}).done(function(){$('[name="exec"]').val("")})})}function onKeydownShellInput(){$(document).on("keydown",'#logs [name="exec"]',function(e){38!==e.which&&40!==e.which||(38===e.which?inputsHistory.length>=0&&(indexInputHistorySelected-=1):40===e.which&&inputsHistory.length>=indexInputHistorySelected+1&&(indexInputHistorySelected+=1),$('[name="exec"]').val(inputsHistory[indexInputHistorySelected]))})}function onClickProcessBadge(){$(document).on("click",".process-wrap .badge",function(e){var o=$(this).data("process-id")
socket.emit("killProcess",{id:o})})}function showLog(e){$("#logs .shell-body").append("<li>["+e.date+"] "+formatTypeLog(e.type)+" - "+e.data+"</li>")}function showProcessBadge(e){$(".process-wrap").append('<span class="badge" data-process-id="'+e.id+'">'+e.data+"</span>")}function formatTypeLog(e){return"response"===e?"":"error"===e?'<span class="color-error">[ERROR]</span>':"exit"===e?'<span class="color-complete">[exit code]</span>':void 0}var inputsHistory=[],indexInputHistorySelected=null,socket=io.connect("/")
socket.on("init",function(e){e.history.forEach(function(e){showLog(e)}),e.process.forEach(function(e){showProcessBadge(e)})}),["response","error","exit"].forEach(function(e){socket.on(e,function(e){showLog(e)})}),socket.on("clear",function(){$("#logs .shell-body li").remove()}),socket.on("response",function(e){e.id&&showProcessBadge(e)}),socket.on("exit",function(e){$('[data-process-id="'+e.id+'"]').remove()}),$(document).ready(function(){onSubmitShellForm(),onKeydownShellInput(),onClickProcessBadge()})
